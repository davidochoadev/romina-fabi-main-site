---
import fetchNotionData from "../../utils/fetchNotionData";
import createMenuItems from "../../utils/createMenuItems";
import type MenuItem from "../../interfaces/menuItems";
import getDefaultMenuItems from "../../utils/getDefaultMenuItems";
import MobileSecondSubMenu from "./MobileSecondSubMenu.astro";

const { blockIdSubMenu, menuName } = Astro.props;

const defaultMenuItems = getDefaultMenuItems(menuName);

const menuList = await fetchNotionData(blockIdSubMenu, 'blocks', true);
const menuItems : MenuItem[] = createMenuItems(menuList, defaultMenuItems);

---
<ul class="flex top-9 bg-white shadow-md rounded-md flex-col py-2" id="submenu">
   {
      menuItems.map((item: MenuItem) => (
         <li class=" relative gap-1 list-none w-full px-4 py-2">
            <div class="flex flex-row gap-2">
               <a href={item.link} class="grow text-main p-4 hover:bg-main hover:text-white rounded-md lg:w-[200px] flex flex-row transition-all duration-300">
                  <p class="text-xs tracking-widest grow">{item.denominazione}</p>
               </a>
                  {item.hasChildren && (
                     <button class="border-l border-main p-4 group/sub submenu-toggle">
                        <svg class="w-3 h-3 rotate-90 transition-all duration-300"
                        xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                           <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
                        </svg>
                     </button>
                  )}
            </div>
            {item.hasChildren && (
               <div class="MobileSecondSubMenu hidden">               
                  <MobileSecondSubMenu blockIdSubMenu={item.blockIdSubMenu} menuName={item.denominazione} />
               </div>
             )}
         </li>
      ))
   }
</ul>

<script>
document.querySelectorAll('.submenu-toggle').forEach(toggle => {
    toggle.addEventListener('click', function(event) {
      const target = event.target as HTMLElement;
        const li = target!.closest('li');
        const submenu = li!.querySelector('.MobileSecondSubMenu');
        if (submenu) {
            submenu.classList.toggle('hidden');
        }
    });
});


</script>