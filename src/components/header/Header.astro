---
import { Image } from "astro:assets";
import logo from "../../assets/logo.png";
import fetchNotionData from "../../utils/fetchNotionData";
import type MenuItem from "../../interfaces/menuItems";
import SubMenu from "./SubMenu.astro";
import createMenuItems from "../../utils/createMenuItems";
import getDefaultMenuItems from "../../utils/getDefaultMenuItems";
import MobileSubMenu from "./MobileSubMenu.astro";

const defaultMenuItems : MenuItem[] = getDefaultMenuItems('MAIN');

const menuListEnv = import.meta.env.MENU_LIST_BLOCK;
const menuList = await fetchNotionData(menuListEnv, 'blocks', true);
const menuItems : MenuItem[] = createMenuItems(menuList, defaultMenuItems);

---
<header
id="header_menu"
  class="h-[10vh] bg-main/50 backdrop-blur flex flex-colum space-x-4 w-full items-center px-2 lg:px-10 py-3 md:py-4 border-b border-gold shadow-md bg-main sticky top-0 left-0 z-20 opacity-0 "
>
  <div class="w-[50px] h-[50px]">
    <a
    href="/#home"
    rel="home"
    class={`bg-white p-1 rounded-full flex flex-row justify-center items-center gap-2 transition group duration-300 ${
      Astro.url.pathname.toString() === "/"
        ? "text-activate"
        : "text-not-activate hover:text-activate"
    }`}
  >
    <Image
      src={'https://res.cloudinary.com/dk6qm2dhs/image/upload/f_auto,q_70/v1/homepage/dsjwmxyzc34ccnlyi36u'}
      width={50}
      height={50}
      alt="Logo"
    />
  </a>
  </div>
  <div class="hidden grow lg:flex flex-row items-center justify-end gap-4">
    <nav>
      <ul class="flex flex-row gap-4">
      {
         menuItems.map((item : MenuItem) => (
           <li class="group relative gap-1 list-none w-full">
             <a href={item.link} class={
                Astro.url.pathname.toString() === item.link
                  ? "text-activate menu-item"
                  : " text-not-activate hover:text-activate transition duration-300 menu-item"
              }>
               <p class="spacing">{item.denominazione}</p>
               {item.hasChildren && (
               <svg class="w-3 h-3 group-hover:rotate-90 transition-all duration-300 fill-white" role="img" aria-label="Submenu indicator"
               xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
               <title>Sottocategorie di ${item.denominazione}</title>  
               <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
               </svg>
               )}
             </a>
             {item.hasChildren && (
               <SubMenu blockIdSubMenu={item.blockIdSubMenu} menuName={item.denominazione} />
             )}
           </li>
         ))
       }
       </ul>
    </nav>
  </div>
  <div class="flex lg:hidden items-center justify-end flex-row grow ">
    <button
      class="menu__toggle r-button"
      type="button"
      aria-controls="main-menu"
      id="open-menu-mobile"
      role="button"
    >
      <span class="menu__hamburger m-hamburger">
        <span class="m-hamburger__label">
          <span class="menu__toggle-hint screen-reader">Open menu</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="30"
            height="30"
            fill="white"
            class="bi bi-list"
            viewBox="0 0 16 16"
            role="img"
            aria-label="Menu icon"
          >
          <title>Menu</title>
            <path
              fill-rule="evenodd"
              d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"
            ></path>
          </svg>
        </span>
      </span>
    </button>
  </div>
   </header>
   <div class="px-14 bg-main/80 backdrop-blur w-full h-full fixed z-30 top-0 -right-full bg-black/50 flex flex-col overflow-scroll" id="menu-mobile">
    <button class="w-full flex flex-row-reverse p-4" id="close-menu-mobile" aria-label="Chiudi il menu">
      <svg role="img" xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="white" class="bi bi-x-lg" viewBox="0 0 16 16">
        <title>Chiudi</title>
       <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/>
      </svg>
    </button>
    <nav>
      <ul class="flex flex-col gap-4 pb-10">
      {
         menuItems.map((item : MenuItem) => (
           <li class="group relative gap-1 list-none w-full">
            <div class="flex flex-row gap-2 px-4">
              <a href={item.link} class={
                  Astro.url.pathname.toString() === item.link
                    ? "text-activate menu-item"
                    : " text-not-activate hover:text-activate transition duration-300 menu-item"
                }>
                <p class="spacing text-left text-white">{item.denominazione}</p>
              </a>
                 {item.hasChildren && (
                  <button class="border-l border-white p-4 group/sub first-submenu-toggle" aria-label={`Guarda le sottocategorie di ${item.denominazione}`}>
                    <svg class="w-3 h-3 group-hover:rotate-90 transition-all duration-300 fill-white" role="img" aria-label="Submenu indicator"
                    xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                      <title>Sottocateogire di ${item.denominazione}</title>
                      <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
                    </svg>
                  </button>
                 )}
            </div>
             {item.hasChildren && (
              <div class="MobileSubMenu hidden">
               <MobileSubMenu blockIdSubMenu={item.blockIdSubMenu} menuName={item.denominazione} />
              </div>
             )}
           </li>
         ))
       }
      </ul>
    </nav>
   </div>
   <style>
      .menu-item{
         @apply flex flex-row p-2 grow w-full items-center justify-start
      }
   </style>
   <script>
    document.querySelectorAll('.first-submenu-toggle').forEach(toggle => {
    toggle.addEventListener('click', function(event) {
        const target = event.target as HTMLElement;
        const li = target!.closest('li');
        const submenu = li!.querySelector('.MobileSubMenu');
        if (submenu) {
            submenu.classList.toggle('hidden');
        }
    });
});

   </script>