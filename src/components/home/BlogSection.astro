---
import Section from "./components/Section.astro"
import getLastElements from "../../utils/notionDb"
import fs from 'fs'
import type { PageObjectResponse } from '@notionhq/client/build/src/api-endpoints'
import { v2 as cloudinary } from 'cloudinary'

interface PageObjectWithFilePath extends PageObjectResponse {
  filePath: string[]
}

cloudinary.config({ 
  cloud_name: import.meta.env.CLOUDINARY_CLOUD_NAME, 
  api_key: import.meta.env.CLOUDINARY_API_KEY, 
  api_secret: import.meta.env.CLOUDINARY_API_SECRET,
})

const downloadFile = async (url: string): Promise<string | null> => {
  try {
    const response = await fetch(url)
    if (!response.ok) {
      throw new Error(`Failed to fetch ${url}: ${response.statusText}`)
    }
    const buffer = await response.arrayBuffer()

    return new Promise((resolve, reject) => {
      const uploadStream = cloudinary.uploader.upload_stream({
        resource_type: 'image'
      }, (error, result) => {
        if (error) {
          reject(error)
        }
        resolve(result!.url)  // URL dell'immagine su Cloudinary
      })

      uploadStream.end(Buffer.from(buffer))
    });

  } catch (error) {
    console.error('Error during file download:', error);
    return null;
  }
};

const dbKey = import.meta.env.BLOG_DATABASE_KEY;
const data = await getLastElements();
const array = data.results as PageObjectWithFilePath[]

const jsonFilePath = './src/assets/blog/immagini.json';
const jsonFileContent = fs.readFileSync(jsonFilePath, 'utf8');
const fileNamesInJson = JSON.parse(jsonFileContent) as { name: string, url: string }[];

for (const item of array) {
  const copertina = item.properties.Copertina;
  item.filePath = [];

  if (copertina && copertina.type === 'files') {
    const files = copertina.files;
    if (files) {
      for (const file of files) {
        if (file.type === 'file') {
          const fileName = file.name
          const fileUrl = file.file.url

          // Cerca il file per nome
          const fileEntry = fileNamesInJson.find(f => f.name === fileName)

          if (!fileEntry) {
            console.log(`Downloading file: ${fileName}`)
            await downloadFile(fileUrl).then(url => {
              console.log('URL del file caricato:', url)
              if (url !== null) {
                  // Scomponi l'URL originale in parti
                  const urlParts = url.split('/upload/')

                  // Aggiungi i parametri dopo 'upload'
                  const modifiedUrl : string = urlParts[0] + '/upload/w_400/q_auto/f_auto/' + urlParts[1]
                  fileNamesInJson.push({ name: fileName, url: modifiedUrl })
                  fs.writeFileSync(jsonFilePath, JSON.stringify(fileNamesInJson, null, 2))
                  item.filePath.push(modifiedUrl)
              }
            })
          } else {
            // Aggiungi l'URL esistente a item.filePath
            item.filePath.push(fileEntry.url)
          }
        }
      }
    }
  }
}

console.log(array[0].properties)

---

<Section title="Articoli Recenti" subtitle="blog" bgIce={false} ariaLabel="Ultimi Articoli del mio Blog">
   <div class="flex flex-col gap-12">
      <p class="text-zinc text-center pb-4 text-base">
         Se sei appassionato di spiritualità, bioenergetica ed esoterismo, questo è il blog che fa per te! Qui troverai articoli inerenti a questi argomenti e che ti permetteranno di esplorare le tue dimensioni più profonde e di sviluppare le tue capacità. Potrai anche visualizzare le mie analisi tarologiche giornaliere, mensili ed annuali, le quali ti daranno una visione ed un orientamento per superare gli ostacoli della vita. Ti invito a seguire il mio blog e a crescere insieme a me!
      </p>
      {
         array.map((blog : any) => (
            <div class="card lg:card-side bg-base-100 shadow-md drop-shadow-md border border-gold">
               <figure>
                  <img src={blog.filePath} alt={`Cover Post ${blog.properties.Name.title[0].text.content}`} class="w-full h-full object-cover " loading="lazy"/>
               </figure>
               <div class="card-body lg:w-1/2">
                  <h2 class="card-title">{blog.properties.Name.title[0].text.content}</h2>
                  <p>{new Date(blog.properties.Date.date.start)
                     .toLocaleDateString("it-IT", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                        hour: "2-digit",
                        minute: "2-digit"
                     })}
                  </p>
                  <hr class="text-gold">
                  <div class="mb-2" set:html={
                     blog.properties.Description.rich_text[0].text.content.length > 250 ? 
                     blog.properties.Description.rich_text[0].text.content.slice(0, 250) + '...' : 
                     blog.properties.Description.rich_text[0].text.content
                  }></div>
                  <div class="card-actions justify-end">
                     <a class="btn btn-primary article-button spacing" href={`blog/${blog.properties.Categoria.select.name.toLowerCase().replace(/\s+/g, '-')}/${blog.properties.Slug.rich_text[0].plain_text}`}>Leggi Articolo</a>
                  </div>
               </div>
            </div>
         ))
      }
   </div>
</Section>
<style>
 .article-button {
		@apply text-center uppercase text-xs tracking-widest py-4 px-6 md:px-12 bg-main/70 backdrop-blur text-white rounded-md transition-all duration-300 hover:bg-white hover:text-main border border-gold 
	   }  
</style>
